// <auto-generated />
using System;
using AttriRent.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AttriRent.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221223105823_InitSqlServer")]
    partial class InitSqlServer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AttriRent.Models.Attribute", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("image_path")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("attributes");
                });

            modelBuilder.Entity("AttriRent.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activity_status")
                        .HasColumnType("bit");

                    b.Property<int>("attribute_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("order_end_day")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("order_start_day")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("attribute_id");

                    b.HasIndex("user_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("AttriRent.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("password_id")
                        .HasColumnType("int");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("password_id")
                        .IsUnique();

                    b.HasIndex("role_id")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("AttriRent.Models.UserPassword", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("user_password");
                });

            modelBuilder.Entity("AttriRent.Models.UserRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("user_role");
                });

            modelBuilder.Entity("AttriRent.Models.Order", b =>
                {
                    b.HasOne("AttriRent.Models.Attribute", "Attribute")
                        .WithMany("orders")
                        .HasForeignKey("attribute_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttriRent.Models.User", "User")
                        .WithMany("orders")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AttriRent.Models.User", b =>
                {
                    b.HasOne("AttriRent.Models.UserPassword", "user_password")
                        .WithOne("user")
                        .HasForeignKey("AttriRent.Models.User", "password_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttriRent.Models.UserRole", "user_role")
                        .WithOne("user")
                        .HasForeignKey("AttriRent.Models.User", "role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user_password");

                    b.Navigation("user_role");
                });

            modelBuilder.Entity("AttriRent.Models.Attribute", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("AttriRent.Models.User", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("AttriRent.Models.UserPassword", b =>
                {
                    b.Navigation("user")
                        .IsRequired();
                });

            modelBuilder.Entity("AttriRent.Models.UserRole", b =>
                {
                    b.Navigation("user")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
